name: Book

on: [push]

jobs:
  book:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies
      run: sudo apt install -y pandoc texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-luatex fonts-dejavu python3-pygments

    - name: Download the Book Template
      run: |
        curl -L https://github.com/Wandmalfarbe/pandoc-latex-template/releases/download/v2.0.0/Eisvogel.tar.gz | tar -xz eisvogel.latex

    - name: Build Some LaTeX
      run: |
        pandoc --to latex md/cover.md $(grep -o '\(md/.*\.md\)' README.md | tr -d '(' | tr -d ')') --toc --template ./eisvogel.latex --top-level-division=chapter -V documentclass=book -V classoption=oneside --no-highlight |
          sed -e 's/\\begin{verbatim}/\\begin{minted}{Lean}/' -e 's/{verbatim}/{minted}/' -e's/% Listings/\\usepackage{minted}\n\\newmintinline[lean]{pygments\/lean4.py:Lean4Lexer -x}{bgcolor=white}\n\\newminted[leancode]{pygments\/lean4.py:Lean4Lexer -x}{fontsize=\\footnotesize}\n\\setminted{fontsize=\\footnotesize, breaklines}\n/' >out.tex

    - name: Build a PDF
      # Running twice appears to be necessary to not get a blank TOC?!
      run: lualatex -shell-escape out.tex && lualatex -shell-escape out.tex

    - name: Set BOOK_NAME environment variable
      run: |
        if [[ -n "${{ github.event.pull_request }}" ]]; then
            BOOK_NAME=$(echo "Metaprogramming in Lean 4 - PR-${{ github.event.pull_request.number }}")
        else
            BOOK_NAME="Metaprogramming in Lean 4"
        fi
        echo "BOOK_NAME=${BOOK_NAME}" >> $GITHUB_ENV

    - name: Rename
      # Minted doesn't like filenames with spaces in them unfortunately, so we mv.
      run: mv out.tex '${{ env.BOOK_NAME }}.tex' && mv out.pdf '${{ env.BOOK_NAME }}.pdf'

    - name: Upload PDF to artifact storage
      if: ${{ github.event.pull_request }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BOOK_NAME }}
        path: ${{ env.BOOK_NAME }}.pdf

    - uses: "marvinpinto/action-automatic-releases@latest"
      if: ${{ !github.event.pull_request }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        title: ${{ env.BOOK_NAME }}
        files: |
          ${{ env.BOOK_NAME }}.tex
          ${{ env.BOOK_NAME }}.pdf
